{
  "openapi": "3.1.0",
  "info": {
    "title": "Example API",
    "version": "1.0.0",
    "description": "A simple example API to demonstrate conversion"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a list of all users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users to return",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user with the provided information",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User object to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the user"
                },
                "name": {
                  "type": "string",
                  "description": "User's full name"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's email address"
                },
                "age": {
                  "type": "integer",
                  "description": "User's age",
                  "minimum": 0
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether the user account is active",
                  "default": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the user was created"
                }
              },
              "required": [
                "id",
                "name",
                "email"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the user"
          },
          "name": {
            "type": "string",
            "description": "User's full name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "age": {
            "type": "integer",
            "description": "User's age",
            "minimum": 0
          },
          "active": {
            "type": "boolean",
            "description": "Whether the user account is active",
            "default": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the user was created"
          }
        },
        "required": [
          "id",
          "name",
          "email"
        ]
      },
      "UserList": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the user"
                },
                "name": {
                  "type": "string",
                  "description": "User's full name"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User's email address"
                },
                "age": {
                  "type": "integer",
                  "description": "User's age",
                  "minimum": 0
                },
                "active": {
                  "type": "boolean",
                  "description": "Whether the user account is active",
                  "default": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "When the user was created"
                }
              },
              "required": [
                "id",
                "name",
                "email"
              ]
            }
          },
          "total": {
            "type": "integer",
            "description": "Total number of users"
          },
          "page": {
            "type": "integer",
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "description": "Number of users per page"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "details": {
            "type": "object",
            "description": "Additional error details"
          }
        },
        "required": [
          "message"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "description": "Bearer token for authentication",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User management operations"
    }
  ]
}